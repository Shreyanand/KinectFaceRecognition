<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KinectFacialRecognition</name>
    </assembly>
    <members>
        <member name="T:KinectFacialRecognition.Classifier">
            <summary>
            Desingned to separate training EigenObjectRecognizer , recognize logic from the main class.
             Interacts internally with the open CV functionalities.
            the object of this class is passed as a parameter to the recognize function of the Facial Recognition class.
            </summary>
        </member>
        <member name="M:KinectFacialRecognition.Classifier.#ctor">
            <summary>
            Default Constructor, Looks in (Application.StartupPath + "\\TrainedFaces") for training data.
            </summary>
        </member>
        <member name="M:KinectFacialRecognition.Classifier.#ctor(System.String)">
            <summary>
            Takes String input to a different location for training data
            </summary>
            <param name="Training_Folder"></param>
        </member>
        <member name="M:KinectFacialRecognition.Classifier.Recognise(Emgu.CV.Image{Emgu.CV.Structure.Gray,System.Byte},System.Int32)">
            <summary>
            Recognise a Grayscale Image using the trained Eigen Recogniser
            </summary>
        </member>
        <member name="M:KinectFacialRecognition.Classifier.LoadTrainingData(System.String)">
            <summary>
            Loads the traing data given a (string) folder location
            </summary>
            <param name="Folder_location"></param>
            <returns></returns>
        </member>
        <member name="P:KinectFacialRecognition.Classifier.IsTrained">
            <summary>
            gets the status of recognizer
            </summary>
        </member>
        <member name="P:KinectFacialRecognition.Classifier.Get_Eigen_Label">
            <summary>
            Returns a string containg the recognised persons name
            </summary>
        </member>
        <member name="P:KinectFacialRecognition.Classifier.Get_Eigen_Distance">
            <summary>
            Returns a float confidence value for potential false clasifications
            </summary>
        </member>
        <member name="T:KinectFacialRecognition.ColorBitmapGenerator">
            <summary>
            Creates a bitmap representation of a Kinect color frame.
            </summary>
        </member>
        <member name="F:KinectFacialRecognition.ColorBitmapGenerator._pixels">
            <summary>
            Returns the RGB pixel values.
            </summary>
        </member>
        <member name="F:KinectFacialRecognition.ColorBitmapGenerator._width">
            <summary>
            Returns the width of the bitmap.
            </summary>
        </member>
        <member name="F:KinectFacialRecognition.ColorBitmapGenerator._height">
            <summary>
            Returns the height of the bitmap.
            </summary>
        </member>
        <member name="M:KinectFacialRecognition.ColorBitmapGenerator.Update(Microsoft.Kinect.ColorFrame)">
            <summary>
            Updates the bitmap with new frame data.
            </summary>
            <param name="frame">The specified Kinect color frame.</param>
        </member>
        <member name="P:KinectFacialRecognition.ColorBitmapGenerator.Bitmap">
            <summary>
            Returns the actual bitmap.
            </summary>
        </member>
        <member name="T:KinectFacialRecognition.extensions">
            <summary>
            Designed to Create utility methods to convert between OpenCv image format and Bitmap/ BitmapSource formats(WPF)
            </summary>
        </member>
        <member name="M:KinectFacialRecognition.extensions.ToWriteableBitmap(Microsoft.Kinect.ColorFrame)">
            <summary>
            Converts a color frame to a System.Media.Imaging.BitmapSource.
            </summary>
            <param name="frame">The specified color frame.</param>
            <returns>The bitmap representation of the specified color frame.</returns>
        </member>
        <member name="M:KinectFacialRecognition.extensions.ToBitmap(Microsoft.Kinect.ColorFrame)">
            <summary>
            Converts a kinects colorFrame to  bitmap from
            </summary>
            <param name="frame">The specofied color Frame</param>
            <returns>Converted bitmap </returns>
        </member>
        <member name="M:KinectFacialRecognition.extensions.ToBitmapSource(System.Drawing.Bitmap)">
            <summary>
            Converts a Bitmap to BitmapSorce
            </summary>
            <param name="bitmap">The specified bitmap</param>
            <returns>The converted BitmapSource</returns>
        </member>
        <member name="M:KinectFacialRecognition.extensions.ToOpenCVImage``2(Microsoft.Kinect.ColorFrame)">
            <summary>
            Converts ColorFrame to OpenCv Image
            </summary>
            <typeparam name="TColor">EMGU.CV.IColor Ex RGB, Gray  </typeparam>
            <typeparam name="TDepth">Int16, byte</typeparam>
            <param name="image">ColorFrame </param>
            <returns>Converted Open CV image</returns>
        </member>
        <member name="M:KinectFacialRecognition.extensions.ToOpenCVImage``2(System.Drawing.Bitmap)">
            <summary>
            Converts bitmap to openCv image
            </summary>
            <typeparam name="TColor">EMGU.CV.IColor Ex RGB, Gray</typeparam>
            <typeparam name="TDepth">Int16, byte</typeparam>
            <param name="bitmap">bitmap Image</param>
            <returns>Converted Open CV Image</returns>
        </member>
        <member name="M:KinectFacialRecognition.extensions.ToBitmapSource(Emgu.CV.IImage)">
            <summary>
            Converts open cv image to BitmapSource image 
            </summary>
            <param name="image">Specified open Cv image</param>
            <returns>The BitmapSource representation of the open CV image</returns>
        </member>
        <member name="M:KinectFacialRecognition.extensions.GetBitmap(System.Windows.Media.Imaging.BitmapSource)">
            <summary>
            Converts BitmapSource to Bitmap
            </summary>
            <param name="source"> The Specified BitmapSource </param>
            <returns> The bitmap representation of the BitmapSource</returns>
        </member>
        <member name="T:KinectFacialRecognition.NamespaceDoc">
            <summary>
            Kinect Facial recognition namespace. Defines two classes: extensions and FacialRecognition 
             <para>Steps to USE</para>
            <para>1) Create a wpf application and add a reference to EMGU.CV.dll , Emgu.CV.DebuggerVisualizers.VS20XX, EMGU.util.dll , KinectFacialREcognition.dll given in lib folder</para>
            <para>2) Add cvextern.dll, msvcp120.dll, msvcr120.dll, opencv_ffmpeg300_64.dll to your project by "ADD existing item" option. These dlls are given in lib folder</para>
            <para>3) Add reference to Microsoft.Kinect.Face, Microsoft.Kinect</para>
            <para>5) Copy this command in the post build event of your project. If the command gives an error then find the path to the "NuiDatabase"folder of your installed kinect sdk and update the command.</para>
            %systemroot%\System32\xcopy "C:\Program Files (x86)\Microsoft SDKs\Windows\v8.0\ExtensionSDKs\Microsoft.Kinect.Face\2.0\Redist\CommonConfiguration\x86\NuiDatabase" "NuiDatabase" /e /y /i /r
            <para>6) Declare, Initialize kinect FaceFrame, ColorFrame, BodyFrame, ColorBitmap, FacialRecognition class object</para>
            <para>7) Declare face frame events to update variables</para>
            <para>8) Use functions of FacialRecogniton through its object</para>
            <para>Check  demo app for the complete code </para>
            </summary>
        </member>
        <member name="T:KinectFacialRecognition.FacialRecognition">
            <summary>
            Provides access to methods requried to train and recognize faces
            </summary>
        </member>
        <member name="F:KinectFacialRecognition.FacialRecognition.ImagestoWrite">
            <summary>
            Variables needed to save Jpg and xml
            </summary>
        </member>
        <member name="M:KinectFacialRecognition.FacialRecognition.#ctor">
            <summary>
            Constructor to intialize Facial Recognition internal variables 
            </summary>
        </member>
        <member name="M:KinectFacialRecognition.FacialRecognition.IsTrained">
            <summary>
            Gets status of the recognizer.
            </summary>
            <returns> 
            True if recognizer is trained , False otherwise</returns>
        </member>
        <member name="M:KinectFacialRecognition.FacialRecognition.assignIDtoface(Microsoft.Kinect.BodyFrame,System.Collections.Generic.IList{Microsoft.Kinect.Body},Microsoft.Kinect.Face.FaceFrameSource)">
            <summary>
            Assigns a tracking ID to face from Body tracking ID
            </summary>
            <param name="bodyFrame"> The body frame of kinect class </param>
            <param name="_bodies"> list of bodies tracked </param>
            <param name="_faceSource"> The specified and initialized faceSource </param>
        </member>
        <member name="M:KinectFacialRecognition.FacialRecognition.drawRect(System.Windows.Media.Imaging.WriteableBitmap,Microsoft.Kinect.Face.FaceFrameResult)">
            <summary>
            Draws a rectangle on the face in the bitmap
            </summary>
            <param name="colorBitmap"> The specified colorBitmap on which the face reactangle is drawn </param>
            <param name="faceFrameResult"> The specified face frame result, obtained each time a face frame event is called </param>
            <returns>True if face is found and drawn on the bitmap, false otherwise</returns>
        </member>
        <member name="M:KinectFacialRecognition.FacialRecognition.takefacesnapshot(System.Windows.Media.Imaging.WriteableBitmap,Microsoft.Kinect.Face.FaceFrameResult)">
            <summary>
            Takes a snapshot of the face present in the given Bitmap, preprocesses it and converts it to open CV image
            </summary>
            <param name="colorBitmap">The specified Bitmap from which the face Snapshot will be taken  </param>
            <param name="faceFrameResult">The specified face frame result which gives the bounding face rectangle</param>
            <returns> Open CV Image of face.
            Returns null if face is  not found in the frame</returns>
        </member>
        <member name="M:KinectFacialRecognition.FacialRecognition.Recognize(System.Windows.Media.Imaging.WriteableBitmap,Microsoft.Kinect.Face.FaceFrameResult)">
            <summary>
            Recognizes  the face present in the colorBitmap 
            </summary>
            <param name="colorBitmap">The color bitmap which contains the face to be recognized</param>
            <param name="faceFrameresult">The specified face frame result which gives the bounding face rectangle </param>
            <returns>Name and confidence separated by space.
            Returns "" if faceSnapshot is null or no data loaded</returns> 
        </member>
        <member name="M:KinectFacialRecognition.FacialRecognition.Recognize(Emgu.CV.Image{Emgu.CV.Structure.Gray,System.Byte})">
            <summary>
            Recognizes  the face present in the faceSnapshot and returns a string with name and confidence separated by space
            </summary>
            <param name="faceSnapshot">The exact face in openCV image format that will  be recognized</param>
            <returns>Name and confidence separated by a space.  
            Returns "" if faceSnapshot is null or no data loaded</returns> 
        </member>
        <member name="M:KinectFacialRecognition.FacialRecognition.train(System.Windows.Media.Imaging.WriteableBitmap,Microsoft.Kinect.Face.FaceFrameResult,System.String)">
            <summary>
            Trains  the face present in the color bitmap 
            </summary>
            <param name="colorBitmap">The color bitmap which contains the face to be trained</param>
            <param name="faceFrameresult">The specified face frame result which gives the bounding face rectangle</param>
            <param name="name">The name of the person who will be trained</param>
            <returns> True if training succesful, false otherwise</returns>
        </member>
        <member name="M:KinectFacialRecognition.FacialRecognition.train(Emgu.CV.Image{Emgu.CV.Structure.Gray,System.Byte},System.String)">
            <summary>
            Trains  the face present in the faceSnapshot
            </summary>
            <param name="faceSnapshot">The exact face in openCV image format that will  be recognized</param>
            <param name="name">The name of the person who will be trained</param>
            <returns>True if training succesful, false otherwise </returns>
        </member>
        <member name="M:KinectFacialRecognition.FacialRecognition.reload">
            <summary>
            Reloads the  training data and updates the recognizer
            </summary>
            <returns>True if Recognizer trained</returns>
        </member>
        <member name="M:KinectFacialRecognition.FacialRecognition.getfaceRectangle(Microsoft.Kinect.Face.FaceFrameResult)">
            <summary>
            Returns the face coordinates from the faceFrameResult
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:KinectFacialRecognition.FacialRecognition.GetEncoder(System.Drawing.Imaging.ImageFormat)">
            <summary>
            Returns the codec for the image format
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:KinectFacialRecognition.FacialRecognition.save_training_data(System.Drawing.Image,System.String)">
            <summary>
            Creates/Updates the face trained in the folder, their Jpg and the XML file associated with them.
            </summary>
            <param name="face_data"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
    </members>
</doc>
